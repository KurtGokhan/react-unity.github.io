{"pageProps":{"docData":{"id":"interop","contentHtml":"<p>Although there are various ways to do this for advanced use cases, the recommended way is to use the <code>Globals</code> object for communication between React and Unity.\n<code>Globals</code> is a dictionary of Unity objects you can send over to the React side from the Unity side.</p>\n<p>You can set <code>Globals</code> in the inspector:</p>\n<p><img src=\"/images/docs/interop/inspector.png\" alt=\"inspector\"></p>\n<p>After assigning, you can access your object in React side via the <code>Globals</code> global variable. Here is an <a href=\"https://github.com/ReactUnity/full-sample/blob/main/react/src/showcase/index.tsx#L176\">example script</a> using <code>Globals</code>. You can download the <a href=\"https://github.com/ReactUnity/full-sample\">full sample project</a> to see this in action.</p>\n<p><img src=\"/images/docs/interop/example.gif\" alt=\"example\"></p>\n<p>Note: You can set/get an object's public properties and call its public methods from React side. However, if you try to set/get a non-existing or non-public property/method, you will get an error.</p>\n","title":"Communication between React and Unity","order":1}},"__N_SSG":true}